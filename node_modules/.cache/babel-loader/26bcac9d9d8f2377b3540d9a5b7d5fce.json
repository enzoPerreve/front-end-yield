{"ast":null,"code":"import _objectSpread from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useCallback,useState}from'react';import{Route,useRouteMatch}from'react-router-dom';import{useDispatch}from'react-redux';import BigNumber from'bignumber.js';import{useWallet}from'@binance-chain/bsc-use-wallet';import{Image}from'@pancakeswap-libs/uikit';import{BLOCKS_PER_YEAR}from'config';import FlexLayout from'components/layout/Flex';import Page from'components/layout/Page';import{useFarms,usePriceBnbBusd,usePriceCakeBusd}from'state/hooks';import useRefresh from'hooks/useRefresh';import{fetchFarmUserDataAsync}from'state/actions';import{QuoteToken}from'config/constants/types';import useI18n from'hooks/useI18n';import FarmCard from'./components/FarmCard/FarmCard';import Hero from'./components/Hero';import FarmTabButtons from'./components/FarmTabButtons';import Divider from'./components/Divider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Farms=function Farms(farmsProps){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var TranslateString=useI18n();var farmsLP=useFarms();var cakePrice=usePriceCakeBusd();var bnbPrice=usePriceBnbBusd();var _useWallet=useWallet(),account=_useWallet.account,ethereum=_useWallet.ethereum;var tokenMode=farmsProps.tokenMode;var dispatch=useDispatch();var _useRefresh=useRefresh(),fastRefresh=_useRefresh.fastRefresh;useEffect(function(){if(account){dispatch(fetchFarmUserDataAsync(account));}},[account,dispatch,fastRefresh]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stakedOnly=_useState2[0],setStakedOnly=_useState2[1];var activeFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier!=='0X';});var inactiveFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier==='0X';});var stakedOnlyFarms=activeFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});// /!\\ This function will be removed soon\n// This function compute the APY for each farm and will be replaced when we have a reliable API\n// to retrieve assets prices against USD\nvar farmsList=useCallback(function(farmsToDisplay,removed){// const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\nvar farmsToDisplayWithAPY=farmsToDisplay.map(function(farm){// if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n//   return farm\n// }\nvar cakeRewardPerBlock=new BigNumber(farm.TelPerBlock||1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18));var cakeRewardPerYear=cakeRewardPerBlock.times(BLOCKS_PER_YEAR);var apy=cakePrice.times(cakeRewardPerYear);var totalValue=new BigNumber(farm.lpTotalInQuoteToken||0);// if (farm.quoteTokenSymbol === QuoteToken.WMATIC) {\n//   totalValue = totalValue.times(bnbPrice);\n// }\nif(farm.quoteTokenSymbol===QuoteToken.CAKE){totalValue=totalValue.times(cakePrice);}if(totalValue.comparedTo(0)>0){apy=apy.div(totalValue);}return _objectSpread(_objectSpread({},farm),{},{apy:apy});});return farmsToDisplayWithAPY.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,removed:removed,bnbPrice:bnbPrice,cakePrice:cakePrice,ethereum:ethereum,account:account},farm.pid);});},[account,cakePrice,ethereum,bnbPrice]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Hero,{tokenMode:tokenMode}),/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(FarmTabButtons,{stakedOnly:stakedOnly,setStakedOnly:setStakedOnly}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:stakedOnly?farmsList(stakedOnlyFarms,false):farmsList(activeFarms,false)}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/history\"),children:farmsList(inactiveFarms,true)})]})]}),/*#__PURE__*/_jsx(Image,{src:\"/images/egg/8.png\",alt:\"illustration\",width:1352,height:587,responsive:true})]})]});};export default Farms;","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useDispatch","BigNumber","useWallet","Image","BLOCKS_PER_YEAR","FlexLayout","Page","useFarms","usePriceBnbBusd","usePriceCakeBusd","useRefresh","fetchFarmUserDataAsync","QuoteToken","useI18n","FarmCard","Hero","FarmTabButtons","Divider","Farms","farmsProps","path","TranslateString","farmsLP","cakePrice","bnbPrice","account","ethereum","tokenMode","dispatch","fastRefresh","stakedOnly","setStakedOnly","activeFarms","filter","farm","isTokenOnly","multiplier","inactiveFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","farmsList","farmsToDisplay","removed","farmsToDisplayWithAPY","map","cakeRewardPerBlock","TelPerBlock","times","poolWeight","div","pow","cakeRewardPerYear","apy","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","CAKE","comparedTo","pid"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd} from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Hero from './components/Hero'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.TelPerBlock || 1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        // if (farm.quoteTokenSymbol === QuoteToken.WMATIC) {\n        //   totalValue = totalValue.times(bnbPrice);\n        // }\n\n        if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          totalValue = totalValue.times(cakePrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [account, cakePrice, ethereum, bnbPrice],\n  )\n\n  return (\n    <>\n    <Hero tokenMode={tokenMode}/>\n    <Page>\n      {/* <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {\n          tokenMode ?\n            TranslateString(10002, 'Stake tokens to earn TEL')\n            :\n          TranslateString(320, 'Stake LP tokens to earn TEL')\n        }\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {TranslateString(10000, 'Deposit Fee will be used to buyback TEL')}\n      </Heading> */}\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/>\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <Image src=\"/images/egg/8.png\" alt=\"illustration\" width={1352} height={587} responsive />\n      </Page>\n      </>\n  )\n}\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}