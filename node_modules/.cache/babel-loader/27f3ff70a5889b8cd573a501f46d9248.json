{"ast":null,"code":"export var QuoteToken;(function(QuoteToken){QuoteToken[\"BNB\"]=\"BNB\";QuoteToken[\"CAKE\"]=\"CAKE\";QuoteToken[\"SYRUP\"]=\"SYRUP\";QuoteToken[\"USDC\"]=\"USDC\";QuoteToken[\"TWT\"]=\"TWT\";QuoteToken[\"UST\"]=\"UST\";QuoteToken[\"WMATIC\"]=\"WMATIC\";QuoteToken[\"MATIC\"]=\"MATIC\";})(QuoteToken||(QuoteToken={}));export var PoolCategory;(function(PoolCategory){PoolCategory[\"COMMUNITY\"]=\"Community\";PoolCategory[\"CORE\"]=\"Core\";PoolCategory[\"BINANCE\"]=\"Binance\";})(PoolCategory||(PoolCategory={}));","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/src/config/constants/types.ts"],"names":["QuoteToken","PoolCategory"],"mappings":"AAqBA,UAAYA,CAAAA,UAAZ,C,UAAYA,U,EAAAA,U,cAAAA,U,gBAAAA,U,kBAAAA,U,gBAAAA,U,cAAAA,U,cAAAA,U,oBAAAA,U,qBAAAA,U,GAAAA,U,MAWZ,UAAYC,CAAAA,YAAZ,C,UAAYA,Y,EAAAA,Y,0BAAAA,Y,gBAAAA,Y,yBAAAA,Y,GAAAA,Y","sourcesContent":["export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'USDC' = 'USDC',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'WMATIC' = 'WMATIC',\n  'MATIC' = 'MATIC'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  80001?: string\n  137: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  otherExchange?: string\n  risk: number\n  decimal: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n"]},"metadata":{},"sourceType":"module"}