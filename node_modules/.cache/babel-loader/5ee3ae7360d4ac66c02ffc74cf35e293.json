{"ast":null,"code":"var _jsxFileName = \"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/src/views/Home/components/FarmStakingCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport BigNumber from 'bignumber.js';\nimport useI18n from 'hooks/useI18n';\nimport { useAllHarvest } from 'hooks/useHarvest';\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance';\nimport UnlockButton from 'components/UnlockButton';\nimport CakeHarvestBalance from './CakeHarvestBalance';\nimport CakeWalletBalance from './CakeWalletBalance';\nimport { usePriceCakeBusd } from '../../../state/hooks';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport { getCakeAddress } from '../../../utils/addressHelpers';\nimport useAllEarnings from '../../../hooks/useAllEarnings';\nimport { getBalanceNumber } from '../../../utils/formatBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\nposition: relative;\noverflow: hidden;\nz-index: 2;\n\n&:before {\n  content: ' ';\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.2;\n  background-image: url('/images/egg/2a.png');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n  }\n`;\n_c = StyledFarmStakingCard;\nconst Block = styled.div`\n  margin-bottom: 16px;\n`;\n_c2 = Block;\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`;\n_c3 = CardImage;\nconst Label = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n`;\n_c4 = Label;\nconst Actions = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n_c5 = Actions;\nconst token = getCakeAddress();\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWallet();\n  const TranslateString = useI18n();\n  const farmsWithBalance = useFarmsWithBalance();\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()));\n  const eggPrice = usePriceCakeBusd().toNumber();\n  const allEarnings = useAllEarnings();\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber();\n  }, 0);\n  const balancesWithValue = farmsWithBalance.filter(balanceType => balanceType.balance.toNumber() > 0);\n  const {\n    onReward\n  } = useAllHarvest(balancesWithValue.map(farmWithBalance => farmWithBalance.pid));\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true);\n\n    try {\n      await onReward();\n    } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false);\n    }\n  }, [onReward]);\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum;\n\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'LION',\n              decimals: '18',\n              image: 'https://www.polyion.net/images/egg/3.png'\n            }\n          }\n        });\n\n        if (wasAdded) {// console.log('Token was added')\n        }\n      } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: TranslateString(542, 'Farms & Staking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardImage, {\n        src: \"/images/egg/2.png\",\n        alt: \"cake logo\",\n        width: 64,\n        height: 64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: TranslateString(544, 'EGG to Harvest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeHarvestBalance, {\n          earningsSum: earningsSum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: [\"~$\", (eggPrice * earningsSum).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: TranslateString(546, 'EGG in Wallet')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeWalletBalance, {\n          cakeBalance: cakeBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: [\"~$\", (eggPrice * cakeBalance).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: addWatchJaguarToken,\n          size: \"sm\",\n          mb: 2,\n          children: [\"+ Add LION to \", /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              marginLeft: 8\n            },\n            width: 16,\n            src: \"https://jaguarswap.com/images/tokens/metamask.png\",\n            alt: \"metamask logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), account ? /*#__PURE__*/_jsxDEV(Button, {\n          id: \"harvest-all\",\n          disabled: balancesWithValue.length <= 0 || pendingTx,\n          onClick: harvestAllFarms,\n          fullWidth: true,\n          children: pendingTx ? TranslateString(548, 'Collecting EGG') : TranslateString(999, `Harvest all (${balancesWithValue.length})`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(UnlockButton, {\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"8K5oEjAZ6F5WVBSBQjcSff54ZSU=\", false, function () {\n  return [useWallet, useI18n, useFarmsWithBalance, useTokenBalance, usePriceCakeBusd, useAllEarnings, useAllHarvest];\n});\n\n_c6 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"CardImage\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Actions\");\n$RefreshReg$(_c6, \"FarmedStakingCard\");","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWallet","BigNumber","useI18n","useAllHarvest","useFarmsWithBalance","UnlockButton","CakeHarvestBalance","CakeWalletBalance","usePriceCakeBusd","useTokenBalance","getCakeAddress","useAllEarnings","getBalanceNumber","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","token","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","farmsWithBalance","cakeBalance","eggPrice","toNumber","allEarnings","earningsSum","reduce","accum","earning","pow","balancesWithValue","filter","balanceType","balance","onReward","map","farmWithBalance","pid","harvestAllFarms","error","addWatchJaguarToken","provider","window","ethereum","wasAdded","request","method","params","type","options","address","symbol","decimals","image","toFixed","marginLeft","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\nimport { usePriceCakeBusd } from '../../../state/hooks'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport { getCakeAddress } from '../../../utils/addressHelpers'\nimport useAllEarnings from '../../../hooks/useAllEarnings'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\nposition: relative;\noverflow: hidden;\nz-index: 2;\n\n&:before {\n  content: ' ';\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.2;\n  background-image: url('/images/egg/2a.png');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n  }\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`\n\nconst token = getCakeAddress();\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\n  const eggPrice = usePriceCakeBusd().toNumber()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'LION',\n              decimals: '18',\n              image: 'https://www.polyion.net/images/egg/3.png',\n            },\n          },\n        })\n\n        if (wasAdded) {\n          // console.log('Token was added')\n        }\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, [])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading>\n        <CardImage src=\"/images/egg/2.png\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{TranslateString(544, 'EGG to Harvest')}</Label>\n          <CakeHarvestBalance earningsSum={earningsSum}/>\n          <Label>~${(eggPrice * earningsSum).toFixed(2)}</Label>\n        </Block>\n        <Block>\n          <Label>{TranslateString(546, 'EGG in Wallet')}</Label>\n          <CakeWalletBalance cakeBalance={cakeBalance} />\n          <Label>~${(eggPrice * cakeBalance).toFixed(2)}</Label>\n        </Block>\n        <Actions>\n          <Button onClick={addWatchJaguarToken} size=\"sm\" mb={2}>\n            + Add LION to <img style={{ marginLeft: 8 }} width={16} src=\"https://jaguarswap.com/images/tokens/metamask.png\" alt=\"metamask logo\" />\n          </Button>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              fullWidth\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting EGG')\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\n            </Button>\n          ) : (\n            <UnlockButton fullWidth />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n"]},"metadata":{},"sourceType":"module"}