{"ast":null,"code":"import _regeneratorRuntime from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useMemo,useState}from'react';import{Button,Modal}from'@pancakeswap-libs/uikit';import ModalActions from'components/ModalActions';import TokenInput from'components/TokenInput';import useI18n from'hooks/useI18n';import{getFullDisplayBalance}from'utils/formatBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DepositModal=function DepositModal(_ref){var max=_ref.max,onConfirm=_ref.onConfirm,onDismiss=_ref.onDismiss,_ref$tokenName=_ref.tokenName,tokenName=_ref$tokenName===void 0?'':_ref$tokenName,_ref$depositFeeBP=_ref.depositFeeBP,depositFeeBP=_ref$depositFeeBP===void 0?0:_ref$depositFeeBP,_ref$decimal=_ref.decimal,decimal=_ref$decimal===void 0?18:_ref$decimal;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),val=_useState2[0],setVal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pendingTx=_useState4[0],setPendingTx=_useState4[1];var TranslateString=useI18n();var fullBalance=useMemo(function(){return getFullDisplayBalance(max);},[max]);var handleChange=useCallback(function(e){setVal(e.currentTarget.value);},[setVal]);var handleSelectMax=useCallback(function(){setVal(fullBalance);},[fullBalance,setVal]);return/*#__PURE__*/_jsxs(Modal,{title:\"\".concat(TranslateString(316,'Deposit'),\" \").concat(tokenName,\" Tokens\"),onDismiss:onDismiss,children:[/*#__PURE__*/_jsx(TokenInput,{value:val,onSelectMax:handleSelectMax,onChange:handleChange,max:fullBalance,symbol:tokenName,depositFeeBP:depositFeeBP}),/*#__PURE__*/_jsxs(ModalActions,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onDismiss,children:TranslateString(462,'Cancel')}),/*#__PURE__*/_jsx(Button,{disabled:pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.next=3;return onConfirm(val,decimal);case 3:setPendingTx(false);onDismiss();case 5:case\"end\":return _context.stop();}}},_callee);})),children:pendingTx?TranslateString(488,'Pending Confirmation'):TranslateString(464,'Confirm')})]})]});};export default DepositModal;","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/src/views/Farms/components/DepositModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","TokenInput","useI18n","getFullDisplayBalance","DepositModal","max","onConfirm","onDismiss","tokenName","depositFeeBP","decimal","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":"gkBACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,OAA7B,CAAsCC,QAAtC,KAAsD,OAAtD,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,yBAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,qBAAT,KAAsC,qBAAtC,C,wFAWA,GAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAmF,IAAhFC,CAAAA,GAAgF,MAAhFA,GAAgF,CAA3EC,SAA2E,MAA3EA,SAA2E,CAAhEC,SAAgE,MAAhEA,SAAgE,qBAArDC,SAAqD,CAArDA,SAAqD,yBAAzC,EAAyC,uCAApCC,YAAoC,CAApCA,YAAoC,4BAArB,CAAqB,qCAAlBC,OAAkB,CAAlBA,OAAkB,uBAAR,EAAQ,cACnI,cAAsBb,QAAQ,CAAC,EAAD,CAA9B,wCAAOc,GAAP,eAAYC,MAAZ,eACA,eAAkCf,QAAQ,CAAC,KAAD,CAA1C,yCAAOgB,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,eAAe,CAAGb,OAAO,EAA/B,CACA,GAAMc,CAAAA,WAAW,CAAGpB,OAAO,CAAC,UAAM,CAChC,MAAOO,CAAAA,qBAAqB,CAACE,GAAD,CAA5B,CACD,CAF0B,CAExB,CAACA,GAAD,CAFwB,CAA3B,CAIA,GAAMY,CAAAA,YAAY,CAAGtB,WAAW,CAC9B,SAACuB,CAAD,CAA0C,CACxCN,MAAM,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN,CACD,CAH6B,CAI9B,CAACR,MAAD,CAJ8B,CAAhC,CAOA,GAAMS,CAAAA,eAAe,CAAG1B,WAAW,CAAC,UAAM,CACxCiB,MAAM,CAACI,WAAD,CAAN,CACD,CAFkC,CAEhC,CAACA,WAAD,CAAcJ,MAAd,CAFgC,CAAnC,CAIA,mBACE,MAAC,KAAD,EAAO,KAAK,WAAKG,eAAe,CAAC,GAAD,CAAM,SAAN,CAApB,aAAwCP,SAAxC,WAAZ,CAAwE,SAAS,CAAED,SAAnF,wBACE,KAAC,UAAD,EACE,KAAK,CAAEI,GADT,CAEE,WAAW,CAAEU,eAFf,CAGE,QAAQ,CAAEJ,YAHZ,CAIE,GAAG,CAAED,WAJP,CAKE,MAAM,CAAER,SALV,CAME,YAAY,CAAEC,YANhB,EADF,cASE,MAAC,YAAD,yBACE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAEF,SAArC,UACGQ,eAAe,CAAC,GAAD,CAAM,QAAN,CADlB,EADF,cAIE,KAAC,MAAD,EACE,QAAQ,CAAEF,SADZ,CAEE,OAAO,sEAAE,mIACPC,YAAY,CAAC,IAAD,CAAZ,CADO,sBAEDR,CAAAA,SAAS,CAACK,GAAD,CAAMD,OAAN,CAFR,QAGPI,YAAY,CAAC,KAAD,CAAZ,CACAP,SAAS,GAJF,sDAAF,EAFT,UASGM,SAAS,CAAGE,eAAe,CAAC,GAAD,CAAM,sBAAN,CAAlB,CAAkDA,eAAe,CAAC,GAAD,CAAM,SAAN,CAT7E,EAJF,GATF,GADF,CA4BD,CA/CD,CAiDA,cAAeX,CAAAA,YAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimal: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n  decimal?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0, decimal = 18}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, decimal)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n"]},"metadata":{},"sourceType":"module"}