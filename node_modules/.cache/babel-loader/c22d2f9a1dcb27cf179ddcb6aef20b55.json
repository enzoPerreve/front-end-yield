{"ast":null,"code":"export let QuoteToken;\n\n(function (QuoteToken) {\n  QuoteToken[\"BNB\"] = \"BNB\";\n  QuoteToken[\"CAKE\"] = \"CAKE\";\n  QuoteToken[\"SYRUP\"] = \"SYRUP\";\n  QuoteToken[\"USDC\"] = \"USDC\";\n  QuoteToken[\"TWT\"] = \"TWT\";\n  QuoteToken[\"UST\"] = \"UST\";\n  QuoteToken[\"WMATIC\"] = \"WMATIC\";\n  QuoteToken[\"MATIC\"] = \"MATIC\";\n})(QuoteToken || (QuoteToken = {}));\n\nexport let PoolCategory;\n\n(function (PoolCategory) {\n  PoolCategory[\"COMMUNITY\"] = \"Community\";\n  PoolCategory[\"CORE\"] = \"Core\";\n  PoolCategory[\"BINANCE\"] = \"Binance\";\n})(PoolCategory || (PoolCategory = {}));","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/PolyRhino/polyrhino-frontend-master/src/config/constants/types.ts"],"names":["QuoteToken","PoolCategory"],"mappings":"AAqBA,WAAYA,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAWZ,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y","sourcesContent":["export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'USDC' = 'USDC',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'WMATIC' = 'WMATIC',\n  'MATIC' = 'MATIC'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  80001?: string\n  137: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  otherExchange?: string\n  risk: number\n  decimal: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n"]},"metadata":{},"sourceType":"module"}