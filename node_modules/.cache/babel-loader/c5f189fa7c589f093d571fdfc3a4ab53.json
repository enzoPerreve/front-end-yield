{"ast":null,"code":"import _slicedToArray from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Button,Flex,Heading,IconButton,AddIcon,MinusIcon,useModal}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import useStake from'hooks/useStake';import useUnstake from'hooks/useUnstake';import{getBalanceNumber}from'utils/formatBalance';import DepositModal from'../DepositModal';import WithdrawModal from'../WithdrawModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IconButtonWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  svg {\\n    width: 20px;\\n  }\\n\"])));var StakeAction=function StakeAction(_ref){var stakedBalance=_ref.stakedBalance,tokenBalance=_ref.tokenBalance,tokenName=_ref.tokenName,pid=_ref.pid,depositFeeBP=_ref.depositFeeBP,decimal=_ref.decimal;var TranslateString=useI18n();var _useStake=useStake(pid,decimal),onStake=_useStake.onStake;var _useUnstake=useUnstake(pid,decimal),onUnstake=_useUnstake.onUnstake;var rawStakedBalance=getBalanceNumber(stakedBalance,decimal);var displayBalance=rawStakedBalance.toLocaleString();var _useModal=useModal(/*#__PURE__*/_jsx(DepositModal,{max:tokenBalance,onConfirm:onStake,tokenName:tokenName,depositFeeBP:depositFeeBP})),_useModal2=_slicedToArray(_useModal,1),onPresentDeposit=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(WithdrawModal,{max:stakedBalance,onConfirm:onUnstake,tokenName:tokenName,decimal:decimal})),_useModal4=_slicedToArray(_useModal3,1),onPresentWithdraw=_useModal4[0];var renderStakingButtons=function renderStakingButtons(){return rawStakedBalance===0?/*#__PURE__*/_jsx(Button,{onClick:onPresentDeposit,children:TranslateString(999,'Stake')}):/*#__PURE__*/_jsxs(IconButtonWrapper,{children:[/*#__PURE__*/_jsx(IconButton,{variant:\"tertiary\",onClick:onPresentWithdraw,mr:\"6px\",children:/*#__PURE__*/_jsx(MinusIcon,{color:\"primary\"})}),/*#__PURE__*/_jsx(IconButton,{variant:\"tertiary\",onClick:onPresentDeposit,children:/*#__PURE__*/_jsx(AddIcon,{color:\"primary\"})})]});};return/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Heading,{color:rawStakedBalance===0?'textDisabled':'text',children:displayBalance}),renderStakingButtons()]});};export default StakeAction;","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/src/views/Farms/components/FarmCard/StakeAction.tsx"],"names":["React","styled","Button","Flex","Heading","IconButton","AddIcon","MinusIcon","useModal","useI18n","useStake","useUnstake","getBalanceNumber","DepositModal","WithdrawModal","IconButtonWrapper","div","StakeAction","stakedBalance","tokenBalance","tokenName","pid","depositFeeBP","decimal","TranslateString","onStake","onUnstake","rawStakedBalance","displayBalance","toLocaleString","onPresentDeposit","onPresentWithdraw","renderStakingButtons"],"mappings":"saAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,OAAvB,CAAgCC,UAAhC,CAA4CC,OAA5C,CAAqDC,SAArD,CAAgEC,QAAhE,KAAgF,yBAAhF,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,C,wFAWA,GAAMC,CAAAA,iBAAiB,CAAGd,MAAM,CAACe,GAAV,qHAAvB,CAOA,GAAMC,CAAAA,WAA2C,CAAG,QAA9CA,CAAAA,WAA8C,MAA2E,IAAxEC,CAAAA,aAAwE,MAAxEA,aAAwE,CAAzDC,YAAyD,MAAzDA,YAAyD,CAA3CC,SAA2C,MAA3CA,SAA2C,CAAhCC,GAAgC,MAAhCA,GAAgC,CAA3BC,YAA2B,MAA3BA,YAA2B,CAAbC,OAAa,MAAbA,OAAa,CAC7H,GAAMC,CAAAA,eAAe,CAAGf,OAAO,EAA/B,CACA,cAAoBC,QAAQ,CAACW,GAAD,CAAME,OAAN,CAA5B,CAAQE,OAAR,WAAQA,OAAR,CACA,gBAAsBd,UAAU,CAACU,GAAD,CAAME,OAAN,CAAhC,CAAQG,SAAR,aAAQA,SAAR,CAEA,GAAMC,CAAAA,gBAAgB,CAAGf,gBAAgB,CAACM,aAAD,CAAgBK,OAAhB,CAAzC,CACA,GAAMK,CAAAA,cAAc,CAAGD,gBAAgB,CAACE,cAAjB,EAAvB,CAEA,cAA2BrB,QAAQ,cAAC,KAAC,YAAD,EAAc,GAAG,CAAEW,YAAnB,CAAiC,SAAS,CAAEM,OAA5C,CAAqD,SAAS,CAAEL,SAAhE,CAA2E,YAAY,CAAEE,YAAzF,EAAD,CAAnC,wCAAOQ,gBAAP,eACA,eAA4BtB,QAAQ,cAClC,KAAC,aAAD,EAAe,GAAG,CAAEU,aAApB,CAAmC,SAAS,CAAEQ,SAA9C,CAAyD,SAAS,CAAEN,SAApE,CAA+E,OAAO,CAAEG,OAAxF,EADkC,CAApC,yCAAOQ,iBAAP,eAIA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,MAAOL,CAAAA,gBAAgB,GAAK,CAArB,cACL,KAAC,MAAD,EAAQ,OAAO,CAAEG,gBAAjB,UAAoCN,eAAe,CAAC,GAAD,CAAM,OAAN,CAAnD,EADK,cAGL,MAAC,iBAAD,yBACE,KAAC,UAAD,EAAY,OAAO,CAAC,UAApB,CAA+B,OAAO,CAAEO,iBAAxC,CAA2D,EAAE,CAAC,KAA9D,uBACE,KAAC,SAAD,EAAW,KAAK,CAAC,SAAjB,EADF,EADF,cAIE,KAAC,UAAD,EAAY,OAAO,CAAC,UAApB,CAA+B,OAAO,CAAED,gBAAxC,uBACE,KAAC,OAAD,EAAS,KAAK,CAAC,SAAf,EADF,EAJF,GAHF,CAYD,CAbD,CAeA,mBACE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,CAAqC,UAAU,CAAC,QAAhD,wBACE,KAAC,OAAD,EAAS,KAAK,CAAEH,gBAAgB,GAAK,CAArB,CAAyB,cAAzB,CAA0C,MAA1D,UAAmEC,cAAnE,EADF,CAEGI,oBAAoB,EAFvB,GADF,CAMD,CAlCD,CAoCA,cAAef,CAAAA,WAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  depositFeeBP?: number\n  decimal?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, tokenName, pid, depositFeeBP, decimal}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid, decimal)\n  const { onUnstake } = useUnstake(pid, decimal)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance, decimal)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} decimal={decimal}/>,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n"]},"metadata":{},"sourceType":"module"}