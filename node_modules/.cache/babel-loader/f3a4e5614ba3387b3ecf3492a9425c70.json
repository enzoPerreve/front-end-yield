{"ast":null,"code":"import _regeneratorRuntime from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useCallback}from'react';import styled from'styled-components';import{Heading,Card,CardBody,Button}from'@pancakeswap-libs/uikit';import{useWallet}from'@binance-chain/bsc-use-wallet';import BigNumber from'bignumber.js';import useI18n from'hooks/useI18n';import{useAllHarvest}from'hooks/useHarvest';import useFarmsWithBalance from'hooks/useFarmsWithBalance';import UnlockButton from'components/UnlockButton';import CakeHarvestBalance from'./CakeHarvestBalance';import CakeWalletBalance from'./CakeWalletBalance';import{usePriceCakeBusd}from'../../../state/hooks';import useTokenBalance from'../../../hooks/useTokenBalance';import{getCakeAddress}from'../../../utils/addressHelpers';import useAllEarnings from'../../../hooks/useAllEarnings';import{getBalanceNumber}from'../../../utils/formatBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\nposition: relative;\\noverflow: hidden;\\nz-index: 2;\\n\\n&:before {\\n  content: ' ';\\n    display: block;\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    width: 100%;\\n    height: 100%;\\n    z-index: -1;\\n    opacity: 0.2;\\n  background-image: url('/images/egg/2a.png');\\n  background-repeat: no-repeat;\\n  background-position: top right;\\n  min-height: 376px;\\n  }\\n\"])));var Block=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var CardImage=styled.img(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var Label=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var Actions=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n\"])));var token=getCakeAddress();var FarmedStakingCard=function FarmedStakingCard(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useWallet=useWallet(),account=_useWallet.account;var TranslateString=useI18n();var farmsWithBalance=useFarmsWithBalance();var cakeBalance=getBalanceNumber(useTokenBalance(getCakeAddress()));var eggPrice=usePriceCakeBusd().toNumber();var allEarnings=useAllEarnings();var earningsSum=allEarnings.reduce(function(accum,earning){return accum+new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber();},0);var balancesWithValue=farmsWithBalance.filter(function(balanceType){return balanceType.balance.toNumber()>0;});var _useAllHarvest=useAllHarvest(balancesWithValue.map(function(farmWithBalance){return farmWithBalance.pid;})),onReward=_useAllHarvest.onReward;var harvestAllFarms=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.prev=1;_context.next=4;return onReward();case 4:_context.next=8;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](1);case 8:_context.prev=8;setPendingTx(false);return _context.finish(8);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,6,8,11]]);})),[onReward]);var addWatchJaguarToken=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var provider,wasAdded;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nprovider=window.ethereum;if(!provider){_context2.next=11;break;}_context2.prev=2;_context2.next=5;return provider.request({method:'wallet_watchAsset',params:{type:'ERC20',options:{address:token,symbol:'TEL',decimals:'18',image:'https://www.polyion.net/images/egg/3.png'}}});case 5:wasAdded=_context2.sent;if(wasAdded){// console.log('Token was added')\n}_context2.next=11;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);})),[]);return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(542,'Farms & Staking')}),/*#__PURE__*/_jsx(CardImage,{src:\"/images/egg/2.png\",alt:\"cake logo\",width:64,height:64}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:TranslateString(544,'EGG to Harvest')}),/*#__PURE__*/_jsx(CakeHarvestBalance,{earningsSum:earningsSum}),/*#__PURE__*/_jsxs(Label,{children:[\"~$\",(eggPrice*earningsSum).toFixed(2)]})]}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:TranslateString(546,'EGG in Wallet')}),/*#__PURE__*/_jsx(CakeWalletBalance,{cakeBalance:cakeBalance}),/*#__PURE__*/_jsxs(Label,{children:[\"~$\",(eggPrice*cakeBalance).toFixed(2)]})]}),/*#__PURE__*/_jsxs(Actions,{children:[/*#__PURE__*/_jsxs(Button,{onClick:addWatchJaguarToken,size:\"sm\",mb:2,children:[\"+ Add TEL to \",/*#__PURE__*/_jsx(\"img\",{style:{marginLeft:8},width:16,src:\"https://jaguarswap.com/images/tokens/metamask.png\",alt:\"metamask logo\"})]}),account?/*#__PURE__*/_jsx(Button,{id:\"harvest-all\",disabled:balancesWithValue.length<=0||pendingTx,onClick:harvestAllFarms,fullWidth:true,children:pendingTx?TranslateString(548,'Collecting EGG'):TranslateString(999,\"Harvest all (\".concat(balancesWithValue.length,\")\"))}):/*#__PURE__*/_jsx(UnlockButton,{fullWidth:true})]})]})});};export default FarmedStakingCard;","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/Polyion/polyion-frontend-master/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWallet","BigNumber","useI18n","useAllHarvest","useFarmsWithBalance","UnlockButton","CakeHarvestBalance","CakeWalletBalance","usePriceCakeBusd","useTokenBalance","getCakeAddress","useAllEarnings","getBalanceNumber","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","token","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","farmsWithBalance","cakeBalance","eggPrice","toNumber","allEarnings","earningsSum","reduce","accum","earning","pow","balancesWithValue","filter","balanceType","balance","map","farmWithBalance","pid","onReward","harvestAllFarms","addWatchJaguarToken","provider","window","ethereum","request","method","params","type","options","address","symbol","decimals","image","wasAdded","toFixed","marginLeft","length"],"mappings":"y2BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,QAAxB,CAAkCC,MAAlC,KAAgD,yBAAhD,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,2BAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,OAASC,gBAAT,KAAiC,sBAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CACA,OAASC,cAAT,KAA+B,+BAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,OAASC,gBAAT,KAAiC,8BAAjC,C,wFAEA,GAAMC,CAAAA,qBAAqB,CAAGlB,MAAM,CAACE,IAAD,CAAT,ybAA3B,CAsBA,GAAMiB,CAAAA,KAAK,CAAGnB,MAAM,CAACoB,GAAV,6FAAX,CAIA,GAAMC,CAAAA,SAAS,CAAGrB,MAAM,CAACsB,GAAV,6FAAf,CAIA,GAAMC,CAAAA,KAAK,CAAGvB,MAAM,CAACoB,GAAV,wGACA,kBAAGI,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,UAA5B,EADA,CAAX,CAKA,GAAMC,CAAAA,OAAO,CAAG3B,MAAM,CAACoB,GAAV,iKAAb,CAOA,GAAMQ,CAAAA,KAAK,CAAGb,cAAc,EAA5B,CAEA,GAAMc,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,cAAkC/B,QAAQ,CAAC,KAAD,CAA1C,wCAAOgC,SAAP,eAAkBC,YAAlB,eACA,eAAoB1B,SAAS,EAA7B,CAAQ2B,OAAR,YAAQA,OAAR,CACA,GAAMC,CAAAA,eAAe,CAAG1B,OAAO,EAA/B,CACA,GAAM2B,CAAAA,gBAAgB,CAAGzB,mBAAmB,EAA5C,CACA,GAAM0B,CAAAA,WAAW,CAAGlB,gBAAgB,CAACH,eAAe,CAACC,cAAc,EAAf,CAAhB,CAApC,CACA,GAAMqB,CAAAA,QAAQ,CAAGvB,gBAAgB,GAAGwB,QAAnB,EAAjB,CACA,GAAMC,CAAAA,WAAW,CAAGtB,cAAc,EAAlC,CACA,GAAMuB,CAAAA,WAAW,CAAGD,WAAW,CAACE,MAAZ,CAAmB,SAACC,KAAD,CAAQC,OAAR,CAAoB,CACzD,MAAOD,CAAAA,KAAK,CAAG,GAAInC,CAAAA,SAAJ,CAAcoC,OAAd,EAAuBtB,GAAvB,CAA2B,GAAId,CAAAA,SAAJ,CAAc,EAAd,EAAkBqC,GAAlB,CAAsB,EAAtB,CAA3B,EAAsDN,QAAtD,EAAf,CACD,CAFmB,CAEjB,CAFiB,CAApB,CAGA,GAAMO,CAAAA,iBAAiB,CAAGV,gBAAgB,CAACW,MAAjB,CAAwB,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACC,OAAZ,CAAoBV,QAApB,GAAiC,CAAlD,EAAxB,CAA1B,CAEA,mBAAqB7B,aAAa,CAACoC,iBAAiB,CAACI,GAAlB,CAAsB,SAACC,eAAD,QAAqBA,CAAAA,eAAe,CAACC,GAArC,EAAtB,CAAD,CAAlC,CAAQC,QAAR,gBAAQA,QAAR,CAEA,GAAMC,CAAAA,eAAe,CAAGrD,WAAW,sEAAC,mIAClCgC,YAAY,CAAC,IAAD,CAAZ,CADkC,sCAG1BoB,CAAAA,QAAQ,EAHkB,6GAOhCpB,YAAY,CAAC,KAAD,CAAZ,CAPgC,mGAAD,GAShC,CAACoB,QAAD,CATgC,CAAnC,CAWA,GAAME,CAAAA,mBAAmB,CAAGtD,WAAW,sEAAC,8JACtC;AACA;AACMuD,QAHgC,CAGrBC,MAAM,CAACC,QAHc,KAIlCF,QAJkC,mEAOXA,CAAAA,QAAQ,CAACG,OAAT,CAAiB,CACtCC,MAAM,CAAE,mBAD8B,CAEtCC,MAAM,CAAE,CACNC,IAAI,CAAE,OADA,CAENC,OAAO,CAAE,CACPC,OAAO,CAAElC,KADF,CAEPmC,MAAM,CAAE,KAFD,CAGPC,QAAQ,CAAE,IAHH,CAIPC,KAAK,CAAE,0CAJA,CAFH,CAF8B,CAAjB,CAPW,QAO5BC,QAP4B,gBAoBlC,GAAIA,QAAJ,CAAc,CACZ;AACD,CAtBiC,yJAAD,GA2BpC,EA3BoC,CAAvC,CA6BA,mBACE,KAAC,qBAAD,wBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EAAS,IAAI,CAAC,IAAd,CAAmB,EAAE,CAAC,MAAtB,UACGjC,eAAe,CAAC,GAAD,CAAM,iBAAN,CADlB,EADF,cAIE,KAAC,SAAD,EAAW,GAAG,CAAC,mBAAf,CAAmC,GAAG,CAAC,WAAvC,CAAmD,KAAK,CAAE,EAA1D,CAA8D,MAAM,CAAE,EAAtE,EAJF,cAKE,MAAC,KAAD,yBACE,KAAC,KAAD,WAAQA,eAAe,CAAC,GAAD,CAAM,gBAAN,CAAvB,EADF,cAEE,KAAC,kBAAD,EAAoB,WAAW,CAAEM,WAAjC,EAFF,cAGE,MAAC,KAAD,iBAAU,CAACH,QAAQ,CAAGG,WAAZ,EAAyB4B,OAAzB,CAAiC,CAAjC,CAAV,GAHF,GALF,cAUE,MAAC,KAAD,yBACE,KAAC,KAAD,WAAQlC,eAAe,CAAC,GAAD,CAAM,eAAN,CAAvB,EADF,cAEE,KAAC,iBAAD,EAAmB,WAAW,CAAEE,WAAhC,EAFF,cAGE,MAAC,KAAD,iBAAU,CAACC,QAAQ,CAAGD,WAAZ,EAAyBgC,OAAzB,CAAiC,CAAjC,CAAV,GAHF,GAVF,cAeE,MAAC,OAAD,yBACE,MAAC,MAAD,EAAQ,OAAO,CAAEd,mBAAjB,CAAsC,IAAI,CAAC,IAA3C,CAAgD,EAAE,CAAE,CAApD,wCACe,YAAK,KAAK,CAAE,CAAEe,UAAU,CAAE,CAAd,CAAZ,CAA+B,KAAK,CAAE,EAAtC,CAA0C,GAAG,CAAC,mDAA9C,CAAkG,GAAG,CAAC,eAAtG,EADf,GADF,CAIGpC,OAAO,cACN,KAAC,MAAD,EACE,EAAE,CAAC,aADL,CAEE,QAAQ,CAAEY,iBAAiB,CAACyB,MAAlB,EAA4B,CAA5B,EAAiCvC,SAF7C,CAGE,OAAO,CAAEsB,eAHX,CAIE,SAAS,KAJX,UAMGtB,SAAS,CACNG,eAAe,CAAC,GAAD,CAAM,gBAAN,CADT,CAENA,eAAe,CAAC,GAAD,wBAAsBW,iBAAiB,CAACyB,MAAxC,MARrB,EADM,cAYN,KAAC,YAAD,EAAc,SAAS,KAAvB,EAhBJ,GAfF,GADF,EADF,CAuCD,CA9FD,CAgGA,cAAexC,CAAAA,iBAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\nimport { usePriceCakeBusd } from '../../../state/hooks'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport { getCakeAddress } from '../../../utils/addressHelpers'\nimport useAllEarnings from '../../../hooks/useAllEarnings'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\nposition: relative;\noverflow: hidden;\nz-index: 2;\n\n&:before {\n  content: ' ';\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.2;\n  background-image: url('/images/egg/2a.png');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n  }\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`\n\nconst token = getCakeAddress();\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\n  const eggPrice = usePriceCakeBusd().toNumber()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'TEL',\n              decimals: '18',\n              image: 'https://www.polyion.net/images/egg/3.png',\n            },\n          },\n        })\n\n        if (wasAdded) {\n          // console.log('Token was added')\n        }\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, [])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading>\n        <CardImage src=\"/images/egg/2.png\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{TranslateString(544, 'EGG to Harvest')}</Label>\n          <CakeHarvestBalance earningsSum={earningsSum}/>\n          <Label>~${(eggPrice * earningsSum).toFixed(2)}</Label>\n        </Block>\n        <Block>\n          <Label>{TranslateString(546, 'EGG in Wallet')}</Label>\n          <CakeWalletBalance cakeBalance={cakeBalance} />\n          <Label>~${(eggPrice * cakeBalance).toFixed(2)}</Label>\n        </Block>\n        <Actions>\n          <Button onClick={addWatchJaguarToken} size=\"sm\" mb={2}>\n            + Add TEL to <img style={{ marginLeft: 8 }} width={16} src=\"https://jaguarswap.com/images/tokens/metamask.png\" alt=\"metamask logo\" />\n          </Button>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              fullWidth\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting EGG')\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\n            </Button>\n          ) : (\n            <UnlockButton fullWidth />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n"]},"metadata":{},"sourceType":"module"}