{"ast":null,"code":"import BigNumber from'bignumber.js';import{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import useRefresh from'hooks/useRefresh';import{fetchFarmsPublicDataAsync,fetchPoolsUserDataAsync}from'./actions';import{QuoteToken}from'../config/constants/types';var ZERO=new BigNumber(0);export var useFetchPublicData=function useFetchPublicData(){var dispatch=useDispatch();var _useRefresh=useRefresh(),slowRefresh=_useRefresh.slowRefresh;useEffect(function(){dispatch(fetchFarmsPublicDataAsync());// dispatch(fetchPoolsPublicDataAsync())\n},[dispatch,slowRefresh]);};// Farms\nexport var useFarms=function useFarms(){var farms=useSelector(function(state){return state.farms.data;});return farms;};export var useFarmFromPid=function useFarmFromPid(pid){var farm=useSelector(function(state){return state.farms.data.find(function(f){return f.pid===pid;});});return farm;};export var useFarmFromSymbol=function useFarmFromSymbol(lpSymbol){var farm=useSelector(function(state){return state.farms.data.find(function(f){return f.lpSymbol===lpSymbol;});});return farm;};export var useFarmUser=function useFarmUser(pid){var farm=useFarmFromPid(pid);return{allowance:farm.userData?new BigNumber(farm.userData.allowance):new BigNumber(0),tokenBalance:farm.userData?new BigNumber(farm.userData.tokenBalance):new BigNumber(0),stakedBalance:farm.userData?new BigNumber(farm.userData.stakedBalance):new BigNumber(0),earnings:farm.userData?new BigNumber(farm.userData.earnings):new BigNumber(0)};};// Pools\nexport var usePools=function usePools(account){var _useRefresh2=useRefresh(),fastRefresh=_useRefresh2.fastRefresh;var dispatch=useDispatch();useEffect(function(){if(account){dispatch(fetchPoolsUserDataAsync(account));}},[account,dispatch,fastRefresh]);var pools=useSelector(function(state){return state.pools.data;});return pools;};export var usePoolFromPid=function usePoolFromPid(sousId){var pool=useSelector(function(state){return state.pools.data.find(function(p){return p.sousId===sousId;});});return pool;};// Prices\nexport var usePriceBnbBusd=function usePriceBnbBusd(){var pid=1;// WMATIC-USDC LP\nvar farm=useFarmFromPid(pid);return farm.tokenPriceVsQuote?new BigNumber(farm.tokenPriceVsQuote):ZERO;};export var usePriceCakeBusd=function usePriceCakeBusd(){var pid=0;// RHINO-USDC LP\nvar farm=useFarmFromPid(pid);return farm.tokenPriceVsQuote?new BigNumber(farm.tokenPriceVsQuote):ZERO;};export var useTotalValue=function useTotalValue(){var farms=useFarms();var bnbPrice=usePriceBnbBusd();var cakePrice=usePriceCakeBusd();var value=new BigNumber(0);for(var i=0;i<farms.length;i++){var farm=farms[i];if(farm.lpTotalInQuoteToken){var val=void 0;if(farm.quoteTokenSymbol===QuoteToken.WMATIC){val=bnbPrice.times(farm.lpTotalInQuoteToken);}if(farm.quoteTokenSymbol===QuoteToken.CAKE){val=cakePrice.times(farm.lpTotalInQuoteToken);}else{val=farm.lpTotalInQuoteToken;}value=value.plus(val);}}return value;};","map":{"version":3,"sources":["/Users/florianc/Documents/PERSO/blockchain/PolyRhino/polyrhino-frontend-master/src/state/hooks.ts"],"names":["BigNumber","useEffect","useSelector","useDispatch","useRefresh","fetchFarmsPublicDataAsync","fetchPoolsUserDataAsync","QuoteToken","ZERO","useFetchPublicData","dispatch","slowRefresh","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","pool","p","usePriceBnbBusd","tokenPriceVsQuote","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","i","length","lpTotalInQuoteToken","val","quoteTokenSymbol","WMATIC","times","CAKE","plus"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 1 // WMATIC-USDC LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 0; // RHINO-USDC LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.WMATIC) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }\n      if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n    }\n  }\n  return value;\n}"]},"metadata":{},"sourceType":"module"}